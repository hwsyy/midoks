#创建数据库 导入数据库 查看数据库 查看表 对表的 查 改 增 删#

#mysql -u 用户名 -p

#CREATE DATABASE 数据库名

#删除数据库
mysql> drop database db49;

#SHOW DATABASES
+--------------------+
| Database           |
+--------------------+
| information_schema |
| db49               |
| mysql              |
| phpmyadmin         |
| test               |
+--------------------+
5 rows in set (0.19 sec)


#USE 数据库
mysql> use db49;

#source 数据库sql文件
mysql> source C:\Users\Administrator\Desktop\MySQL1\db49.sql

#SHOW TABLES
mysql> show tables;
+----------------+
| Tables_in_db49 |
+----------------+
| book           |
| user           |
+----------------+
2 rows in set (0.00 sec)


#SHOW COLUMNS FROM 表名 （DESCRIBE 表名;DESC 表名;）
#【什么是auto_increment？】
mysql> desc book;
+---------+-------------+------+-----+---------+----------------+
| Field   | Type        | Null | Key | Default | Extra          |
+---------+-------------+------+-----+---------+----------------+
| id      | int(11)     | NO   | PRI | NULL    | auto_increment |
| user_id | int(11)     | NO   |     | 0       |                |
| bname   | varchar(30) | NO   |     |         |                |
+---------+-------------+------+-----+---------+----------------+
3 rows in set (0.01 sec)


#SHOW CREATE TABLE 表名;
| book  | CREATE TABLE `book` (
  `id` int(11) NOT NULL auto_increment,
  `user_id` int(11) NOT NULL default '0',
  `bname` varchar(30) NOT NULL default '',
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=11 DEFAULT CHARSET=utf8 |


#SHOW CREATE DATABASE 数据库名字;
mysql> show create database db49;
+----------+---------------------------------------------------------------+
| Database | Create Database                                               |
+----------+---------------------------------------------------------------+
| db49     | CREATE DATABASE `db49` /*!40100 DEFAULT CHARACTER SET utf8 */ |
+----------+---------------------------------------------------------------+
1 row in set (0.01 sec)


#检索一个列
#SELECT 字段名 FROM 表名;
mysql> select bname from book;
+--------+
| bname  |
+--------+
| book1  |
| book2  |
| book3  |
| book4  |
| book5  |
| book6  |
| book7  |
| book8  |
| book9  |
| book10 |
+--------+
10 rows in set (0.00 sec)


#检索多个列
#SELECT 字段1，字段2 FROM 表名
mysql> select user_id,bname from book;
+---------+--------+
| user_id | bname  |
+---------+--------+
|       1 | book1  |
|       1 | book2  |
|       1 | book3  |
|       2 | book4  |
|       2 | book5  |
|       2 | book6  |
|       3 | book7  |
|       3 | book8  |
|       3 | book9  |
|       3 | book10 |
+---------+--------+
10 rows in set (0.00 sec)
mysql> select * from book;
+----+---------+--------+
| id | user_id | bname  |
+----+---------+--------+
|  1 |       1 | book1  |
|  2 |       1 | book2  |
|  3 |       1 | book3  |
|  4 |       2 | book4  |
|  5 |       2 | book5  |
|  6 |       2 | book6  |
|  7 |       3 | book7  |
|  8 |       3 | book8  |
|  9 |       3 | book9  |
| 10 |       3 | book10 |
+----+---------+--------+
10 rows in set (0.00 sec)


#检索所有列
#SELECT * FROM 表名

#检索不同的部分
#SELECT DISTINCT 字段名 FROM 表名;【注意 DISTINCT 要放在前列】
mysql> select distinct age from user;
+-----+
| age |
+-----+
|  20 |
|  24 |
|  25 |
|  26 |
|  21 |
|  27 |
|  28 |
|  22 |
+-----+
8 rows in set (0.07 sec)


#限制检索的数量
#SELECT 字段名 FROM 表名 LIMIT 限制的数量;
mysql> select * from user limit 3;
+----+-----------+-----+-----+
| id | name      | sex | age |
+----+-----------+-----+-----+
|  1 | xiaohong  |   0 |  20 |
|  2 | xiaobai   |   1 |  24 |
|  3 | xiaohuang |   1 |  25 |
+----+-----------+-----+-----+
3 rows in set (0.00 sec)

#SELECT 字段名 FROM 表名 LIMIT 起始行数，检索数量;【行号从0开始】
mysql> select * from user limit 3,5;
+----+---------+-----+-----+
| id | name    | sex | age |
+----+---------+-----+-----+
|  4 | xiaolv  |   0 |  26 |
|  5 | xiaofen |   0 |  21 |
|  6 | xiaolan |   1 |  27 |
|  7 | xiaozi  |   0 |  28 |
|  8 | xiaohei |   1 |  24 |
+----+---------+-----+-----+
5 rows in set (0.00 sec)

#完全限定名
#SELECT 表名.字段名 FROM 表名
mysql> select user.name from user;
+-----------+
| name      |
+-----------+
| xiaohong  |
| xiaobai   |
| xiaohuang |
| xiaolv    |
| xiaofen   |
| xiaolan   |
| xiaozi    |
| xiaohei   |
| xiaozong  |
| xiaohui   |
+-----------+
10 rows in set (0.06 sec)

#SELECT 表名.字段名 FROM 数据库.表名
mysql> select user.name from db49.user;
+-----------+
| name      |
+-----------+
| xiaohong  |
| xiaobai   |
| xiaohuang |
| xiaolv    |
| xiaofen   |
| xiaolan   |
| xiaozi    |
| xiaohei   |
| xiaozong  |
| xiaohui   |
+-----------+
10 rows in set (0.00 sec)

#排序
#SELECT 字段名 FROM 表名 ORDER BY 字段名 【一般排序使用的是要检索的字段，当然别的字段也可以】
mysql> select * from user order by age;
+----+-----------+-----+-----+
| id | name      | sex | age |
+----+-----------+-----+-----+
|  1 | xiaohong  |   0 |  20 |
|  5 | xiaofen   |   0 |  21 |
| 10 | xiaohui   |   0 |  22 |
|  2 | xiaobai   |   1 |  24 |
|  8 | xiaohei   |   1 |  24 |
|  3 | xiaohuang |   1 |  25 |
|  9 | xiaozong  |   0 |  25 |
|  4 | xiaolv    |   0 |  26 |
|  6 | xiaolan   |   1 |  27 |
|  7 | xiaozi    |   0 |  28 |
+----+-----------+-----+-----+
10 rows in set (0.00 sec)

#多列排序
#SELECT 字段名1，字段名2 FROM 表名 ORDER BY 字段名1，字段名2；
#【解释：先按照字段名1来排序，然后按照字段名2来排序】
mysql> select * from user order by sex desc,age desc;
+----+-----------+-----+-----+
| id | name      | sex | age |
+----+-----------+-----+-----+
|  6 | xiaolan   |   1 |  27 |
|  3 | xiaohuang |   1 |  25 |
|  2 | xiaobai   |   1 |  24 |
|  8 | xiaohei   |   1 |  24 |
|  7 | xiaozi    |   0 |  28 |
|  4 | xiaolv    |   0 |  26 |
|  9 | xiaozong  |   0 |  25 |
| 10 | xiaohui   |   0 |  22 |
|  5 | xiaofen   |   0 |  21 |
|  1 | xiaohong  |   0 |  20 |
+----+-----------+-----+-----+
10 rows in set (0.00 sec)


#降序排序
#SELECT 字段名 FROM 表名 ORDER BY 字段名 DESC;【默认是ASC升序】
mysql> select * from user order by age desc;
+----+-----------+-----+-----+
| id | name      | sex | age |
+----+-----------+-----+-----+
|  7 | xiaozi    |   0 |  28 |
|  6 | xiaolan   |   1 |  27 |
|  4 | xiaolv    |   0 |  26 |
|  3 | xiaohuang |   1 |  25 |
|  9 | xiaozong  |   0 |  25 |
|  2 | xiaobai   |   1 |  24 |
|  8 | xiaohei   |   1 |  24 |
| 10 | xiaohui   |   0 |  22 |
|  5 | xiaofen   |   0 |  21 |
|  1 | xiaohong  |   0 |  20 |
+----+-----------+-----+-----+
10 rows in set (0.00 sec)


#混合排序
#SELECT 字段名1，字段名2 FROM 表名 ORDER BY 字段名1 DESC，字段名2；
#【注意：MySQL和大多数DBMS中认为a和A是一样的】


#练习：利用排序和限制，找出一个表中最大和最小的值
#【注意：FROM -> ORDER BY ->LIMIT 的顺序不能变】
mysql> select name from user order by age desc limit 1;
+--------+
| name   |
+--------+
| xiaozi |
+--------+
1 row in set (0.00 sec)


#过滤数据
#SELECT 字段 FROM 表名 WHERE 判断条件;
#【注意判断条件 = < > <= >= <> !=】
mysql> select * from user where age>=24;
+----+-----------+-----+-----+
| id | name      | sex | age |
+----+-----------+-----+-----+
|  2 | xiaobai   |   1 |  24 |
|  3 | xiaohuang |   1 |  25 |
|  4 | xiaolv    |   0 |  26 |
|  6 | xiaolan   |   1 |  27 |
|  7 | xiaozi    |   0 |  28 |
|  8 | xiaohei   |   1 |  24 |
|  9 | xiaozong  |   0 |  25 |
+----+-----------+-----+-----+
7 rows in set (0.08 sec)

mysql> select * from user where age=27;
+----+---------+-----+-----+
| id | name    | sex | age |
+----+---------+-----+-----+
|  6 | xiaolan |   1 |  27 |
+----+---------+-----+-----+
1 row in set (0.00 sec)

mysql> select * from user where age<>24;
+----+-----------+-----+-----+
| id | name      | sex | age |
+----+-----------+-----+-----+
|  1 | xiaohong  |   0 |  20 |
|  3 | xiaohuang |   1 |  25 |
|  4 | xiaolv    |   0 |  26 |
|  5 | xiaofen   |   0 |  21 |
|  6 | xiaolan   |   1 |  27 |
|  7 | xiaozi    |   0 |  28 |
|  9 | xiaozong  |   0 |  25 |
| 10 | xiaohui   |   0 |  22 |
+----+-----------+-----+-----+
8 rows in set (0.00 sec)

mysql> select * from user where age!=24;
+----+-----------+-----+-----+
| id | name      | sex | age |
+----+-----------+-----+-----+
|  1 | xiaohong  |   0 |  20 |
|  3 | xiaohuang |   1 |  25 |
|  4 | xiaolv    |   0 |  26 |
|  5 | xiaofen   |   0 |  21 |
|  6 | xiaolan   |   1 |  27 |
|  7 | xiaozi    |   0 |  28 |
|  9 | xiaozong  |   0 |  25 |
| 10 | xiaohui   |   0 |  22 |
+----+-----------+-----+-----+
8 rows in set (0.00 sec)




#使用BETWEEN过滤数据
#SELECT 字段 FROM 表名 WHERE 字段 BETWEEN n AND m;
mysql> select * from user where age between 24 and 27;
+----+-----------+-----+-----+
| id | name      | sex | age |
+----+-----------+-----+-----+
|  2 | xiaobai   |   1 |  24 |
|  3 | xiaohuang |   1 |  25 |
|  4 | xiaolv    |   0 |  26 |
|  6 | xiaolan   |   1 |  27 |
|  8 | xiaohei   |   1 |  24 |
|  9 | xiaozong  |   0 |  25 |
+----+-----------+-----+-----+
6 rows in set (0.08 sec)
mysql> select * from user where age not between 24 and 27;
+----+----------+-----+-----+
| id | name     | sex | age |
+----+----------+-----+-----+
|  1 | xiaohong |   0 |  20 |
|  5 | xiaofen  |   0 |  21 |
|  7 | xiaozi   |   0 |  28 |
| 10 | xiaohui  |   0 |  22 |
+----+----------+-----+-----+
4 rows in set (0.00 sec)


#使用IN过滤数据
#SELECT 字段 FROM 表名 WHERE 字段 IN (n1,n2,n3);
mysql> select * from user where age=22 or age=24 or age=27;
+----+---------+-----+-----+
| id | name    | sex | age |
+----+---------+-----+-----+
|  2 | xiaobai |   1 |  24 |
|  6 | xiaolan |   1 |  27 |
|  8 | xiaohei |   1 |  24 |
| 10 | xiaohui |   0 |  22 |
+----+---------+-----+-----+
4 rows in set (0.01 sec)

mysql> select * from user where age in(22,24,27);
+----+---------+-----+-----+
| id | name    | sex | age |
+----+---------+-----+-----+
|  2 | xiaobai |   1 |  24 |
|  6 | xiaolan |   1 |  27 |
|  8 | xiaohei |   1 |  24 |
| 10 | xiaohui |   0 |  22 |
+----+---------+-----+-----+
4 rows in set (0.07 sec)


#使用AND组合过滤
#SELECT 字段 FROM 表名 WHERE 条件1 AND 条件2;


#使用OR组合过滤
#SELECT 字段 FROM 表名 WHERE 条件1 OR 条件2;


#使用AND和OR配合过滤数据
#SELECT 字段 FROM 表名 WHERE 条件1 OR 条件2 AND 条件3；
#【注意：AND的优先级别大于OR，可以加括号】
mysql> select * from user where sex=0 or age>=24 and age<=27;
+----+-----------+-----+-----+
| id | name      | sex | age |
+----+-----------+-----+-----+
|  1 | xiaohong  |   0 |  20 |
|  2 | xiaobai   |   1 |  24 |
|  3 | xiaohuang |   1 |  25 |
|  4 | xiaolv    |   0 |  26 |
|  5 | xiaofen   |   0 |  21 |
|  6 | xiaolan   |   1 |  27 |
|  7 | xiaozi    |   0 |  28 |
|  8 | xiaohei   |   1 |  24 |
|  9 | xiaozong  |   0 |  25 |
| 10 | xiaohui   |   0 |  22 |
+----+-----------+-----+-----+
10 rows in set (0.00 sec)


#NOT的使用
#SELECT 字段 FROM 表名 WHERE 字段 NOT IN (n1,n2,n3);【NOT 使用在IN、BETWEEN、EXISTS之前】


#使用LIKE配合%
#SELECT 字段 FROM 表名 WHERE 字段 LIKE '%a';
#【%a-任意多字符a、a%-a任意多字符、%a%-任意多字符a任意多字符，%表示0个，1个，多个字符】
mysql> select * from user where user like "xiaoh%";
+----+-----------+-----+-----+
| id | user      | sex | age |
+----+-----------+-----+-----+
|  1 | xiaohong  |   0 |  20 |
|  3 | xiaohuang |   1 |  25 |
|  8 | xiaohei   |   1 |  24 |
| 10 | xiaohui   |   0 |  22 |
+----+-----------+-----+-----+
4 rows in set (0.08 sec)

mysql> select * from user where user like "%u%";
+----+-----------+-----+-----+
| id | user      | sex | age |
+----+-----------+-----+-----+
|  3 | xiaohuang |   1 |  25 |
| 10 | xiaohui   |   0 |  22 |
+----+-----------+-----+-----+
2 rows in set (0.00 sec)




#使用LIKE配合_
#SELECT 字段 FROM 表名 WHERE 字段 LIKE '_a';
#【_a-任意一个字符a、a_-a任意一个字符、_a_-任意一个字符a任意一个字符，_表示1个字符】
#【注意，不要烂用通配符，会影响效率】
mysql> select * from user where user like "xiao_ong";
+----+----------+-----+-----+
| id | user     | sex | age |
+----+----------+-----+-----+
|  1 | xiaohong |   0 |  20 |
|  9 | xiaozong |   0 |  25 |
+----+----------+-----+-----+
2 rows in set (0.00 sec)



#正则表达式的使用
#SELECT 字段 FROM 表名 WHERE 字段 REGEXP 正则表达式；
#【注意，正则匹配不区分大小写，除非加关键字BINARY,如SELECT 字段 FROM 表名 WHERE 字段 REGEXP BINARY 正则表达式;】
mysql> select * from user where user regexp "xiao[a-z]ong";
+----+----------+-----+-----+
| id | user     | sex | age |
+----+----------+-----+-----+
|  1 | xiaohong |   0 |  20 |
|  9 | xiaozong |   0 |  25 |
+----+----------+-----+-----+
2 rows in set (0.07 sec)

mysql> select * from user where user regexp "XIAO[a-z]ong";
+----+----------+-----+-----+
| id | user     | sex | age |
+----+----------+-----+-----+
|  1 | xiaohong |   0 |  20 |
|  9 | xiaozong |   0 |  25 |
+----+----------+-----+-----+
2 rows in set (0.00 sec)

mysql> select * from user where user regexp binary "XIAO[a-z]ong";
Empty set (0.08 sec)


#AS的使用
#SELECT 字段 AS 别名 FROM 表名；
mysql> select user as name from user;
+-----------+
| name      |
+-----------+
| xiaohong  |
| xiaobai   |
| xiaohuang |
| xiaolv    |
| xiaofen   |
| xiaolan   |
| xiaozi    |
| xiaohei   |
| xiaozong  |
| xiaohui   |
+-----------+
10 rows in set (0.07 sec)



#计算表达式的使用
#SELECT 字段1×字段2 AS 别名 FROM 表名；【AS是可以省略的】
mysql> select user,sex,age+1 from user;
+-----------+-----+-------+
| user      | sex | age+1 |
+-----------+-----+-------+
| xiaohong  |   0 |    21 |
| xiaobai   |   1 |    25 |
| xiaohuang |   1 |    26 |
| xiaolv    |   0 |    27 |
| xiaofen   |   0 |    22 |
| xiaolan   |   1 |    28 |
| xiaozi    |   0 |    29 |
| xiaohei   |   1 |    25 |
| xiaozong  |   0 |    26 |
| xiaohui   |   0 |    23 |
+-----------+-----+-------+
10 rows in set (0.09 sec)
mysql> select user,sex,age+1 as new_age from user;
+-----------+-----+---------+
| user      | sex | new_age |
+-----------+-----+---------+
| xiaohong  |   0 |      21 |
| xiaobai   |   1 |      25 |
| xiaohuang |   1 |      26 |
| xiaolv    |   0 |      27 |
| xiaofen   |   0 |      22 |
| xiaolan   |   1 |      28 |
| xiaozi    |   0 |      29 |
| xiaohei   |   1 |      25 |
| xiaozong  |   0 |      26 |
| xiaohui   |   0 |      23 |
+-----------+-----+---------+
10 rows in set (0.00 sec)


#函数的使用
#COUNT()-返回满足条件的记录数
#SELECT COUNT(*) FROM 表名;
mysql> select count(*) from user;
+----------+
| count(*) |
+----------+
|       10 |
+----------+
1 row in set (0.00 sec)

mysql> select count(*) as num from user;
+-----+
| num |
+-----+
|  10 |
+-----+
1 row in set (0.01 sec)



#SUM()-返回一列的总和
#SELECT SUM(字段) FROM 表名；
mysql> select sum(age) from user;
+----------+
| sum(age) |
+----------+
|      242 |
+----------+
1 row in set (0.12 sec)

#AVG()-返回一列的平均值
#SELECT AVG(字段) FROM 表名；
mysql> select avg(age) from user;
+----------+
| avg(age) |
+----------+
|  24.2000 |
+----------+
1 row in set (0.00 sec)

#MAX()-返回一列中最大的值
#SELECT MAX(字段) FROM 表名；
mysql> select max(age) from user;
+----------+
| max(age) |
+----------+
|       28 |
+----------+
1 row in set (0.00 sec)

#MIN()-返回一列中最小的值
#SELECT MIN(字段) FROM 表名；
mysql> select min(age) from user;
+----------+
| min(age) |
+----------+
|       20 |
+----------+
1 row in set (0.00 sec)

#分组GROUP BY
#SELECT 字段 FROM 表名 GROUP BY 字段；
#【分组就是按照要求将数据分成一个个组来看，如，按照性别分组。】
mysql> select count(*) from user group by sex;
+----------+
| count(*) |
+----------+
|        6 |
|        4 |
+----------+
2 rows in set (0.00 sec)


#过滤分组HAVING
#SELECT 字段 FROM 表名 GROUP BY 字段 HAVING 条件；
#【HAVING和WHERE的区别，WHERE是过滤行的，HAVING是过滤分组的】
mysql> select count(*) from user group by sex having sex=1;
+----------+
| count(*) |
+----------+
|        4 |
+----------+
1 row in set (0.17 sec)


#【注意，SELECT顺序：SELECT\FROM\WHERE\GROUP BY\HAVING\ORDER BY\LIMIT】

#多表查询
#SELECT 表名1.字段，表名2.字段 FROM 表名1,表名2 WHERE 判断条件
#【多表查询一定要有WHERE判断，不然会出现笛卡尔乘积现象】
mysql> select user.name,book.bname from user,book where book.user_id = user.id;
+-----------+--------+
| name      | bname  |
+-----------+--------+
| xiaohong  | book1  |
| xiaohong  | book2  |
| xiaohong  | book3  |
| xiaobai   | book4  |
| xiaobai   | book5  |
| xiaobai   | book6  |
| xiaohuang | book7  |
| xiaohuang | book8  |
| xiaohuang | book9  |
| xiaohuang | book10 |
+-----------+--------+
10 rows in set (0.00 sec)

#创建一个表
create table `demo`(
    id int not null auto_increment,
    name varchar(30) not null default '',
    price double(9,2) not null default 0.00,
    index aa(name),
    primary key(id)
    )engine=myisam default charset=utf8 collate utf8_general_ci;

#修改表
#ALTER TABLE 表名 ADD 建表语句 [FIRST|AFTER 字段名];
mysql> desc user;
+-------+-----------------+------+-----+---------+----------------+
| Field | Type            | Null | Key | Default | Extra          |
+-------+-----------------+------+-----+---------+----------------+
| id    | int(11)         | NO   | PRI | NULL    | auto_increment |
| name  | varchar(30)     | NO   |     |         |                |
| sex   | tinyint(1)      | NO   |     | 0       |                |
| age   | int(3) unsigned | NO   |     | 0       |                |
+-------+-----------------+------+-----+---------+----------------+
4 rows in set (0.01 sec)

mysql> alter table user add tel int not null default 0;
Query OK, 10 rows affected (0.10 sec)
Records: 10  Duplicates: 0  Warnings: 0

mysql> desc user;
+-------+-----------------+------+-----+---------+----------------+
| Field | Type            | Null | Key | Default | Extra          |
+-------+-----------------+------+-----+---------+----------------+
| id    | int(11)         | NO   | PRI | NULL    | auto_increment |
| name  | varchar(30)     | NO   |     |         |                |
| sex   | tinyint(1)      | NO   |     | 0       |                |
| age   | int(3) unsigned | NO   |     | 0       |                |
| tel   | int(11)         | NO   |     | 0       |                |
+-------+-----------------+------+-----+---------+----------------+
5 rows in set (0.01 sec)

mysql> alter table user add address varchar(120) not null default '' after id;
Query OK, 10 rows affected (0.08 sec)
Records: 10  Duplicates: 0  Warnings: 0

mysql> desc user;
+---------+-----------------+------+-----+---------+----------------+
| Field   | Type            | Null | Key | Default | Extra          |
+---------+-----------------+------+-----+---------+----------------+
| id      | int(11)         | NO   | PRI | NULL    | auto_increment |
| address | varchar(120)    | NO   |     |         |                |
| name    | varchar(30)     | NO   |     |         |                |
| sex     | tinyint(1)      | NO   |     | 0       |                |
| age     | int(3) unsigned | NO   |     | 0       |                |
| tel     | int(11)         | NO   |     | 0       |                |
+---------+-----------------+------+-----+---------+----------------+
6 rows in set (0.01 sec)

#ALTER TABLE 表名 CHANGE(MODIFY) 建表语句 [FIRST|AFTER 字段名];
mysql> alter table user modify address varchar(40) not null default '';
Query OK, 10 rows affected (0.03 sec)
Records: 10  Duplicates: 0  Warnings: 0

mysql> desc user;
+---------+-----------------+------+-----+---------+----------------+
| Field   | Type            | Null | Key | Default | Extra          |
+---------+-----------------+------+-----+---------+----------------+
| id      | int(11)         | NO   | PRI | NULL    | auto_increment |
| address | varchar(40)     | NO   |     |         |                |
| name    | varchar(30)     | NO   |     |         |                |
| sex     | tinyint(1)      | NO   |     | 0       |                |
| age     | int(3) unsigned | NO   |     | 0       |                |
| tel     | int(11)         | NO   |     | 0       |                |
+---------+-----------------+------+-----+---------+----------------+
6 rows in set (0.03 sec)

mysql> alter table user change tel telephone int not null default 0;
Query OK, 10 rows affected (0.03 sec)
Records: 10  Duplicates: 0  Warnings: 0

mysql> desc user;
+-----------+-----------------+------+-----+---------+----------------+
| Field     | Type            | Null | Key | Default | Extra          |
+-----------+-----------------+------+-----+---------+----------------+
| id        | int(11)         | NO   | PRI | NULL    | auto_increment |
| address   | varchar(40)     | NO   |     |         |                |
| name      | varchar(30)     | NO   |     |         |                |
| sex       | tinyint(1)      | NO   |     | 0       |                |
| age       | int(3) unsigned | NO   |     | 0       |                |
| telephone | int(11)         | NO   |     | 0       |                |
+-----------+-----------------+------+-----+---------+----------------+
6 rows in set (0.01 sec)

#【CHANGE 还可以改字段名】
#ALTER TABLE 表名 drop column 列名;
mysql> alter table user drop column telephone;
Query OK, 10 rows affected (0.08 sec)
Records: 10  Duplicates: 0  Warnings: 0

mysql> desc user;
+---------+-----------------+------+-----+---------+----------------+
| Field   | Type            | Null | Key | Default | Extra          |
+---------+-----------------+------+-----+---------+----------------+
| id      | int(11)         | NO   | PRI | NULL    | auto_increment |
| address | varchar(40)     | NO   |     |         |                |
| name    | varchar(30)     | NO   |     |         |                |
| sex     | tinyint(1)      | NO   |     | 0       |                |
| age     | int(3) unsigned | NO   |     | 0       |                |
+---------+-----------------+------+-----+---------+----------------+
5 rows in set (0.01 sec)

#ALTER TABLE 旧表名 RENAME AS 新表名 

mysql> alter table user rename as member;
Query OK, 0 rows affected (0.01 sec)

mysql> show tables;
+----------------+
| Tables_in_db49 |
+----------------+
| book           |
| member         |
| order          |
| show           |
+----------------+
4 rows in set (0.00 sec)

#向表中添加数据
#INSET INTO 表名 VALUES(所有对应字段的值);
#INSET INTO 表名(各个字段名) VALUES(对应字段的值);
mysql> insert into `order`(name,address) values('wangwu','huoxing');
Query OK, 1 row affected (0.00 sec)

mysql> select * from `order`;
+----+--------+-------+-------------------+------------+
| id | name   | price | address           | tel        |
+----+--------+-------+-------------------+------------+
|  1 | ztz    |  1.11 | Beijing Changping | 2147483647 |
|  2 | ztz    |  1.11 | Beijing Changping | 2147483647 |
|  3 | wangwu |  0.00 | huoxing           |          0 |
+----+--------+-------+-------------------+------------+
3 rows in set (0.00 sec)



#向表中修改数据
#UPDATE 表名 SET 字段名1=值1，字段名2=值2 WHERE 条件；
mysql> update `order` set name='ztz2' where id=2;
Query OK, 1 row affected (0.07 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> select * from `order`;
+----+--------+-------+-------------------+------------+
| id | name   | price | address           | tel        |
+----+--------+-------+-------------------+------------+
|  1 | ztz    |  1.11 | Beijing Changping | 2147483647 |
|  2 | ztz2   |  1.11 | Beijing Changping | 2147483647 |
|  3 | wangwu |  0.00 | huoxing           |          0 |
+----+--------+-------+-------------------+------------+
3 rows in set (0.00 sec)


#删除数据
#DELETE FROM 表名 WHERE 条件；
mysql> delete from `order` where id=3;
Query OK, 1 row affected (0.05 sec)

mysql> select * from `order`;
+----+------+-------+-------------------+------------+
| id | name | price | address           | tel        |
+----+------+-------+-------------------+------------+
|  1 | ztz2 |  1.11 | Beijing Changping | 2147483647 |
|  2 | ztz2 |  1.11 | Beijing Changping | 2147483647 |
+----+------+-------+-------------------+------------+
2 rows in set (0.00 sec)

