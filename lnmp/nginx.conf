user  www www;
worker_processes  2;
worker_cpu_affinity 01 10;

events {
	use epoll;
	worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
	fastcgi_cache_path /web/nginx_cache levels=1:2 keys_zone=nginx_cache:30m inactive=1d max_size=1g;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" "$request_time"';


    sendfile     on;
    tcp_nopush   on;
	tcp_nodelay  on;
	


	#保持长连掿
    keepalive_timeout  30;

	#fastcgi设置
	fastcgi_connect_timeout 30; 	#指定连接到后端FastCGI的超时时闿
	fastcgi_send_timeout 30;		#向FastCGI传送请求的超时时间＿
									#这个值是指已经完成两次握手后向FastCGI传送请求的超时时间?
	fastcgi_read_timeout 30;	 	#接收FastCGI应答的超时时间，这个值是指已经完成两次握手后接收FastCGI应答的超时时间?
	fastcgi_buffer_size 64k;		#这里可以设置为fastcgi_buffers指令指定的缓冲区大小
	fastcgi_buffers 4 64k;			#指定本地需要用多少和多大的缓冲区来缓冲FastCGI的应条
	fastcgi_busy_buffers_size 128k;	#建议为fastcgi_buffers的两倿
	fastcgi_temp_file_write_size 128k;	#在写入fastcgi_temp_path时将用多大的数据块，
									#默认值是fastcgi_buffers的两倍，设置上述数值设置太小时若负载上来时可能抿502 Bad Gateway
	#fastcgi_cache nginx_cache;    	#开启FastCGI缓存并且为其制定一个名称，有效降低CPU负载，并且防止502错误
	fastcgi_cache_valid 200 302 1h; #指定应答代码缓存时间1小时
	fastcgi_cache_valid 301 1d;     #1
	fastcgi_cache_valid any 1m;     #其它分钟
	fastcgi_cache_min_uses 1;       #缓存在fastcgi_cache_path指令inactive参数值时间内的最少使用次
	
	#gzip
	gzip on;
	gzip_min_length 1k;
	gzip_buffers 4 16k;
	gzip_http_version 1.1;
	gzip_comp_level 5;
	gzip_types text/plain application/x-javascript text/css application/xml;
	gzip_vary on;
	gzip_disable "MSIE [1-6]\.";

	#禁止别的域名绑定
	server {
		listen       80 default;
		server_name	 _;
		#location mysite
		rewrite ^(.*) http://midoks.cachecha.com permanent;
		#return 500
		#return 500;
	}

    server {
        listen       80;
		server_name	 midoks.cachecha.com;
		access_log  logs/midoks_cachecha_com.log  main;
		error_log   logs/midoks_error.log  info;
		root        /web/midoks/;
	
        charset utf-8;

        location / {
            index  index.html index.htm index.php;
			
			if (!-f $request_filename){
				rewrite (.*) /index.php;
			}
        }
 

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
        }
        
        location ~.*\.php$ {
			#proxy_pass   	http://midoks.duapp.com;
            fastcgi_pass   127.0.0.1:9000;
            fastcgi_index  index.php;
            fastcgi_param 	SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include        fastcgi_params;
        }
		
    }


	
	upstream iii {
		server   180.149.132.25:80 weight=1 max_fails=2 fail_timeout=1s;
    }

	server{
		listen       80;
		server_name	test2.cachecha.com;
		location / {
            proxy_next_upstream http_502 http_504 error timeout invalid_header;
            proxy_pass http://iii;
	    	proxy_set_header Host midoks.duapp.com;
	    	proxy_set_header X-Forwarded-For $remote_addr;          
        }
	}

	server {
        listen       80;
		server_name	 www.cachecha.com;
		access_log  logs/www_cachecha_com.log  main;
		error_log   logs/www_error.log  info;
		root        /web/www/;

        location / {
            index  index.html index.htm index.php;
			
			#if (!-f $request_filename){
			rewrite (.*) /index.php;
			#}
        }
 

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
        }
        
        location ~.*\.php$ {
            fastcgi_pass   127.0.0.1:9000;
            fastcgi_index  index.php;
            fastcgi_param 	SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include        fastcgi_params;
        }

		location ~.*\.(gif|jpg|jpeg|png|bmp|swf|ico)$ {
			##防盗链设罿
			valid_referers none blocked midoks.cachecha.com;
			if ($invalid_referer) {
				rewrite ^/ http://midoks.cachecha.com/404.html;
				#return 403;
			}
			#缓存日期
			expires 30d;
		}

		#js|css缓存时间
		location ~.*\.(js|css)?$ {
			expires 1h;
		}
		

    }

	server {
        listen       80;
		server_name	 www.wonagequ.in wonagequ.in;
		access_log  logs/www_wonagequ_com.log  main;
		error_log   logs/wonagequ_error.log  info;
		root        /web/wonagequ/;

        location / {
            index  index.html index.htm index.php;
			
			#if (!-f $request_filename){
			rewrite (.*) /index.php;
			#}
        }
 
  
        location ~.*\.php$ {
            fastcgi_pass   127.0.0.1:9000;
            fastcgi_index  index.php;
            fastcgi_param 	SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include        fastcgi_params;
        }

    }

	#代理
	server{
		listen       80;
		server_name	 webthumb.cachecha.com;
		location / {
			proxy_next_upstream http_502 http_504 error timeout invalid_header;
            proxy_pass   http://127.0.0.1:81;
	    	proxy_redirect default;  
			#Proxy Settings
        	proxy_redirect     off;
        	proxy_set_header   Host             $host;
        	proxy_set_header   X-Real-IP        $remote_addr;
        	proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
        	proxy_max_temp_file_size   0;
        	proxy_connect_timeout      90;
        	proxy_send_timeout         90;
        	proxy_read_timeout         90;
        	proxy_buffer_size          4k;
        	proxy_buffers              4 32k;
        	proxy_busy_buffers_size    64k;
        	proxy_temp_file_write_size 64k;		
        }
	}

	#花生壳代理(用于本地测试)
	server{
		listen       80;
		server_name	 hsk.cachecha.com;
		location / {
			proxy_next_upstream http_502 http_504 error timeout invalid_header;
            proxy_pass   http://midoks.oicp.net:16726;
	    	proxy_redirect default;  
			#Proxy Settings
        	proxy_redirect     off;
        	proxy_set_header   Host             $host;
        	proxy_set_header   X-Real-IP        $remote_addr;
        	proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
        	proxy_max_temp_file_size   0;
        	proxy_connect_timeout      90;
        	proxy_send_timeout         90;
        	proxy_read_timeout         90;
        	proxy_buffer_size          4k;
        	proxy_buffers              4 32k;
        	proxy_busy_buffers_size    64k;
        	proxy_temp_file_write_size 64k;		
        }
	}
}
